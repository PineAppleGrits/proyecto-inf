import React, { useEffect, Suspense } from 'react';
import { Link } from 'react-router-dom';
import { useTranslation, Trans } from 'react-i18next';
import { connect } from 'react-redux';
import toast, { Toaster } from 'react-hot-toast';
import PropTypes from 'prop-types';
import LanguageSelector from '../util/LanguageSelector';
import news from '../../utils/news';

const Landing = function ({ auth }) {
  const { t } = useTranslation(['landing', 'news']);
  const { isAuthenticated } = auth;
  const appButton = isAuthenticated ? 'appButton' : 'loginButton';
  useEffect(() => {
    const randomIndex = Math.floor(Math.random() * news.length);
    const tText = t(`news:${news[randomIndex][1]}`);
    const randomNew = {
      icon: news[randomIndex][0],
      text: tText,
    };
    const darkMode = window.halfmoon.darkModeOn;
    const textColor = darkMode ? '#fff' : '#333';
    const bgColor = darkMode ? '#333' : '#fff';
    toast(randomNew.text, {
      icon: randomNew.icon,
      style: {
        borderRadius: '10px',
        background: bgColor,
        color: textColor,
      },
    });
  });

  return (
    <div>
      <Suspense>
        <Toaster position="bottom-right" reverseOrder />
      </Suspense>

      <div className="">
        <div
          style={{
            backgroundImage: "url('/landing-bg.gif')",
            maxWidth: '100vw',
            height: '100vh',
            backgroundSize: 'cover',
          }}
        >
          <div className="row p-10">
            <div className="col-3">

              <svg width={150} height={34} viewBox="0 0 124 34" className="logo-3LF899">
                <g fill="#ffffff">
                  <svg width="129.625" height="19.75" viewBox="0 0 129.625 19.75" xmlns="http://www.w3.org/2000/svg">
                    <g id="svgGroup" strokeLinecap="round" fillRule="evenodd" fontSize="9pt" stroke="#ffffff" strokeWidth="0.25mm" fill="#ffffff" style={{ stroke: '#ffffff', strokeWidth: '0.25mm', fill: '#ffffff' }}>
                      <path d="M 82.675 11.65 L 82.675 4.4 L 90.45 4.4 L 90.45 19.2 L 82.675 19.2 L 82.675 15.775 A 6.298 6.298 0 0 1 81.822 17.426 A 5.274 5.274 0 0 1 80.475 18.713 A 5.845 5.845 0 0 1 78.483 19.538 Q 77.692 19.713 76.775 19.724 A 10.307 10.307 0 0 1 76.65 19.725 Q 74.496 19.725 73.096 18.887 A 4.593 4.593 0 0 1 72.112 18.1 Q 70.779 16.691 70.602 14.211 A 11.029 11.029 0 0 1 70.575 13.425 L 70.575 4.4 L 78.375 4.4 L 78.375 11.7 A 6.23 6.23 0 0 0 78.414 12.418 Q 78.505 13.205 78.814 13.679 A 1.769 1.769 0 0 0 78.862 13.75 Q 79.35 14.425 80.45 14.425 A 2.522 2.522 0 0 0 81.423 14.252 Q 82.675 13.731 82.675 11.65 Z M 33.45 17.55 L 33.45 12.9 Q 34.294 13.586 35.688 14.111 A 15.608 15.608 0 0 0 36.963 14.525 Q 39.275 15.175 41.275 15.175 A 4.226 4.226 0 0 0 41.629 15.161 Q 41.995 15.13 42.234 15.03 A 1.093 1.093 0 0 0 42.3 15 Q 42.494 14.903 42.581 14.775 A 0.393 0.393 0 0 0 42.65 14.55 A 0.574 0.574 0 0 0 42.454 14.115 A 0.854 0.854 0 0 0 42.375 14.05 Q 42.1 13.85 41.275 13.7 L 38.8 13.2 A 16.111 16.111 0 0 1 37.351 12.853 Q 35.933 12.437 35.109 11.838 A 3.746 3.746 0 0 1 34.8 11.588 A 3.512 3.512 0 0 1 33.635 9.118 A 4.805 4.805 0 0 1 33.625 8.8 Q 33.625 7.25 34.687 6.1 Q 35.615 5.096 37.238 4.492 A 10.364 10.364 0 0 1 37.725 4.325 A 12.779 12.779 0 0 1 39.854 3.858 Q 40.863 3.72 41.998 3.703 A 21.543 21.543 0 0 1 42.325 3.7 A 21.152 21.152 0 0 1 45.104 3.876 A 17.537 17.537 0 0 1 46.65 4.15 A 18.097 18.097 0 0 1 48.031 4.515 Q 48.674 4.714 49.212 4.945 A 8.45 8.45 0 0 1 49.9 5.275 L 49.9 9.65 A 12.399 12.399 0 0 0 48.351 9.022 A 16.034 16.034 0 0 0 46.988 8.638 Q 45.35 8.25 43.725 8.25 Q 42.182 8.25 41.773 8.615 A 0.403 0.403 0 0 0 41.625 8.925 A 0.414 0.414 0 0 0 41.792 9.26 A 0.748 0.748 0 0 0 41.937 9.35 Q 42.175 9.464 42.678 9.563 A 10.091 10.091 0 0 0 43.025 9.625 L 45.35 9.95 A 14.199 14.199 0 0 1 46.795 10.19 Q 48.359 10.54 49.282 11.207 A 3.959 3.959 0 0 1 49.438 11.325 A 3.306 3.306 0 0 1 50.542 13.014 Q 50.75 13.714 50.75 14.6 Q 50.75 16.125 49.787 17.275 Q 48.953 18.272 47.404 18.884 A 9.606 9.606 0 0 1 46.913 19.063 Q 45.346 19.585 43.2 19.679 A 22.194 22.194 0 0 1 42.225 19.7 Q 39.8 19.7 37.512 19.138 A 16.934 16.934 0 0 1 35.039 18.333 A 13.753 13.753 0 0 1 33.45 17.55 Z M 121.825 8.15 L 121.825 1.2 L 129.625 1.2 L 129.625 19.2 L 121.825 19.2 L 121.825 15.325 A 7.704 7.704 0 0 1 121.132 16.905 A 5.355 5.355 0 0 1 119.487 18.675 A 6.084 6.084 0 0 1 117.524 19.514 Q 116.73 19.706 115.808 19.742 A 11.099 11.099 0 0 1 115.375 19.75 A 7.419 7.419 0 0 1 113.448 19.51 A 6.036 6.036 0 0 1 111.687 18.725 A 6.401 6.401 0 0 1 109.419 16.104 A 7.743 7.743 0 0 1 109.312 15.875 Q 108.5 14.05 108.5 11.7 A 9.836 9.836 0 0 1 108.797 9.245 A 8.393 8.393 0 0 1 109.388 7.638 Q 110.275 5.825 111.938 4.775 A 6.808 6.808 0 0 1 114.977 3.762 A 8.458 8.458 0 0 1 115.775 3.725 A 8.747 8.747 0 0 1 117.381 3.864 Q 118.312 4.038 119.055 4.43 A 4.843 4.843 0 0 1 119.65 4.8 A 5.204 5.204 0 0 1 121.015 6.308 Q 121.411 6.953 121.698 7.766 A 9.858 9.858 0 0 1 121.825 8.15 Z M 68.775 5.2 L 68.775 10.275 A 6.884 6.884 0 0 0 67.924 9.874 Q 67.43 9.68 66.85 9.525 Q 65.725 9.225 64.5 9.225 A 11.109 11.109 0 0 0 63.236 9.292 Q 62.613 9.364 62.098 9.512 A 4.388 4.388 0 0 0 61.125 9.913 A 3.044 3.044 0 0 0 60.525 10.353 A 1.839 1.839 0 0 0 59.925 11.725 Q 59.925 12.825 61.075 13.55 A 3.929 3.929 0 0 0 62.044 13.978 Q 62.971 14.256 64.294 14.274 A 13.555 13.555 0 0 0 64.475 14.275 Q 66.7 14.275 68.8 13.3 L 68.8 18.225 A 11.473 11.473 0 0 1 66.755 19.069 A 14.011 14.011 0 0 1 65.637 19.363 A 16.858 16.858 0 0 1 62.754 19.732 A 19.445 19.445 0 0 1 61.9 19.75 A 17.104 17.104 0 0 1 59.39 19.576 Q 58.058 19.378 56.939 18.955 A 9.544 9.544 0 0 1 56.275 18.675 A 9.098 9.098 0 0 1 54.429 17.544 A 6.991 6.991 0 0 1 52.837 15.763 A 7.648 7.648 0 0 1 51.7 11.686 A 9.109 9.109 0 0 1 51.7 11.65 A 7.523 7.523 0 0 1 52.23 8.808 A 7.138 7.138 0 0 1 52.875 7.575 A 7.136 7.136 0 0 1 54.943 5.526 A 9.578 9.578 0 0 1 56.375 4.75 Q 58.7 3.725 62 3.725 A 18.663 18.663 0 0 1 64.863 3.933 Q 66.444 4.178 67.755 4.715 A 10.179 10.179 0 0 1 68.775 5.2 Z M 9.95 19.2 L 0 19.2 L 0 1.7 L 10.675 1.7 A 21.303 21.303 0 0 1 13.443 1.87 Q 14.877 2.058 16.089 2.455 A 11.344 11.344 0 0 1 17.037 2.813 A 10.379 10.379 0 0 1 18.989 3.898 A 7.567 7.567 0 0 1 20.913 5.863 A 7.738 7.738 0 0 1 22.183 9.761 A 9.531 9.531 0 0 1 22.2 10.325 Q 22.2 12.75 20.9 14.75 A 7.71 7.71 0 0 1 19.008 16.73 Q 18.185 17.342 17.141 17.836 A 13.646 13.646 0 0 1 16.837 17.975 Q 14.561 18.985 11.358 19.162 A 25.458 25.458 0 0 1 9.95 19.2 Z M 107.775 4.55 L 107.775 11.275 A 2.81 2.81 0 0 0 107.463 11.126 Q 107.297 11.058 107.096 10.995 A 7.147 7.147 0 0 0 106.662 10.875 A 5.934 5.934 0 0 0 105.81 10.734 A 7.752 7.752 0 0 0 105.075 10.7 A 6.605 6.605 0 0 0 103.744 10.826 Q 102.449 11.093 101.65 11.925 Q 100.794 12.817 100.562 14.478 A 9.739 9.739 0 0 0 100.475 15.825 L 100.475 19.2 L 92.675 19.2 L 92.675 4.4 L 100.3 4.4 L 100.3 9.225 A 13.178 13.178 0 0 1 100.671 7.737 Q 101.181 6.129 102.025 5.25 A 3.97 3.97 0 0 1 104.188 4.102 A 5.801 5.801 0 0 1 105.3 4 A 6.145 6.145 0 0 1 106.198 4.064 A 5.2 5.2 0 0 1 106.7 4.163 A 6.546 6.546 0 0 1 107.156 4.293 Q 107.377 4.366 107.563 4.448 A 3.26 3.26 0 0 1 107.775 4.55 Z M 31.625 6.175 L 31.625 19.2 L 23.825 19.2 L 23.825 6.175 L 31.625 6.175 Z M 7.925 14.125 L 9.8 14.125 Q 11.7 14.125 12.7 13.1 A 3.423 3.423 0 0 0 13.592 11.395 A 5.044 5.044 0 0 0 13.7 10.325 A 4.503 4.503 0 0 0 13.563 9.184 A 3.322 3.322 0 0 0 12.8 7.763 A 2.859 2.859 0 0 0 11.467 6.951 Q 11.004 6.814 10.445 6.784 A 5.962 5.962 0 0 0 10.125 6.775 L 7.925 6.775 L 7.925 14.125 Z M 24.713 4.7 A 4.076 4.076 0 0 0 25.183 4.964 Q 26.252 5.475 27.775 5.475 A 8.188 8.188 0 0 0 28.096 5.469 Q 28.78 5.442 29.364 5.299 A 4.37 4.37 0 0 0 30.763 4.7 A 3.38 3.38 0 0 0 31.165 4.388 A 2.172 2.172 0 0 0 31.925 2.725 A 2.085 2.085 0 0 0 31.376 1.299 A 3.15 3.15 0 0 0 30.763 0.775 Q 29.6 0 27.775 0 Q 26.852 0 26.096 0.188 A 4.487 4.487 0 0 0 24.712 0.775 A 3.352 3.352 0 0 0 24.193 1.188 A 2.088 2.088 0 0 0 23.525 2.725 A 2.101 2.101 0 0 0 24.086 4.174 A 3.152 3.152 0 0 0 24.712 4.7 Z M 119.225 14.325 A 3.213 3.213 0 0 0 120.056 14.223 A 2.329 2.329 0 0 0 121.138 13.6 A 2.444 2.444 0 0 0 121.811 12.226 A 3.408 3.408 0 0 0 121.85 11.7 A 3.065 3.065 0 0 0 121.752 10.903 A 2.247 2.247 0 0 0 121.15 9.863 A 2.333 2.333 0 0 0 119.984 9.249 A 3.446 3.446 0 0 0 119.25 9.175 Q 118.025 9.175 117.3 9.875 A 2.339 2.339 0 0 0 116.603 11.293 A 3.268 3.268 0 0 0 116.575 11.725 Q 116.575 12.9 117.3 13.613 A 2.438 2.438 0 0 0 118.617 14.274 A 3.474 3.474 0 0 0 119.225 14.325 Z" vectorEffect="non-scaling-stroke" />
                    </g>
                  </svg>
                </g>
              </svg>
            </div>
            <div className="col-6 text-decoration-none d-flex justify-content-center">
              <Link
                to="/"
                style={{ color: 'inherit' }}
                className="text-decoration-none"
              >
                <h5>About</h5>
              </Link>
            </div>
            <div className="col-3">
              <div className="row ">
                <div className="col-xs">
                  <LanguageSelector />
                </div>
                <div className="col-xs">
                  <Link to="/@me" className="btn btn-primary">
                    {t(appButton)}
                  </Link>
                </div>
              </div>
            </div>
          </div>
          <div className="row">
            <div className="col-12 text-center">
              <h1 style={{ marginTop: '10rem' }}>
                <Trans i18nKey="landing.title">
                  Hora de tirar
                  <strong>Discord</strong>
                  a la basura.
                </Trans>
              </h1>
              <br />
            </div>
          </div>

          <div className="row  p-5">
            <div className="col d-flex justify-content-center">
              <button type="button" className="btn disabled btn-rounded btn-lg ">
                {t('appButton')}
              </button>
            </div>
            <div className="col d-flex justify-content-center">
              <button type="button" className="btn btn-primary btn-rounded btn-lg ">
                {t('appButton')}
              </button>
            </div>
          </div>
          {/* END IMAGE CONTAINER */}
        </div>
        <div className="container">
          {/* NEXT COMP */}
        </div>
      </div>
    </div>

  );
};
Landing.propTypes = {
  auth: PropTypes.object.isRequired,
};
const mapStateToProps = (state) => ({
  auth: state.auth,
  errors: state.errors,
});

export default connect(mapStateToProps)(Landing);
